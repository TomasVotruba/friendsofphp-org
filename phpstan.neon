includes:
    - vendor/symplify/phpstan-rules/config/symplify-rules.neon

parameters:
    level: 8

    paths:
        - bin
        - src
        - config
        - tests
        - packages

    reportUnmatchedIgnoredErrors: false

    ignoreErrors:
        # for autowire
        - '#Class Fop\\MeetupCom\\Guzzle\\Oauth2AwareClient extends @final class GuzzleHttp\\Client#'

        # for autowiring
        -
            message: '#There should be no empty class#'
            path: packages/meetup-com/src/Guzzle/Oauth2AwareClient.php

        # @todo fix in repository on github
        -
            message: '#Do not use chained method calls\. Put each on separated lines#'
            path: packages/meetup/src/Repository/*Repository.php
        -
            message: '#Anonymous variables in a method call can lead to false dead methods\. Make sure the variable type is known#'
            path: packages/meetup/src/Repository/*Repository.php

        # init repository
        -
            message: '#Autowired/inject method name "boot\(\)" must respect "autowire/inject\(\*\)" name#'
            path: packages/meetup/src/Repository/AbstractRepository.php

        # abstract repository
        -
            message: '#Instead of abstract class, use specific service with composition#'
            path: packages/meetup/src/Repository/AbstractRepository.php


        # too strict for commands
        -
             message: '#Private method in is not allowed here \- it should only delegate to others\. Decouple the private method to a new service class#'
             path: src/Command/ImportCommand.php

        # generics false positive
        - '#Method Fop\\Meetup\\Repository\\AbstractRepository\:\:fetchAll\(\) should return array<TEntity of Fop\\Meetup\\Contract\\ArrayableInterface> but returns array<int, Fop\\Meetup\\Contract\\ArrayableInterface>#'
