<script src="https://unpkg.com/leaflet@1.3.2/dist/leaflet.js"
        integrity="sha512-2fA79E27MOeBgLjmBrtAgM/20clVSV8vJERaW/EcnnWCVGwQRazzKtQS1kIusCZv1PtaQxosDZZ0F1Oastl55w=="
        crossorigin=""></script>

<script type="text/javascript">
    var icons = {
        in_a_week: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png',
        in_a_month: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png'
    };

    var markers = [
        {% set markers %}
            {% for meetup in meetups %}
                {% set diffFromToday = date(meetup.start).diff(date('now')) %}
                {% set daysFromToday = diffFromToday.days %}
                {% set isFuture = diffFromToday.invert %}

                {% if isFuture %}
                    {
                        "type": "{% if daysFromToday <= 7 %}in_a_week{% else %}in_a_month{% endif %}",
                        "title": "{{ meetup.name }}",
                        "position": [{{ meetup.latitude }}, {{ meetup.longitude }}],
                        "date": "{{ meetup.start|date("F j") }}",
                        "location": "{{ meetup.city }}, {{ meetup.country }}",
                        "link": "{{ meetup.url }}"
                    },
                {% endif %}
            {% endfor %}
        {% endset %}

        {{ markers|trim|trim(',', 'right')|raw }}
    ];

    var grouped = {};

    for (var i in markers) {
        var marker = markers[i];

        if (typeof grouped[marker.location] == 'undefined') {
            grouped[marker.location] = {
                type: marker.type,
                position: marker.position,
                markers: []
            };
        }

        grouped[marker.location].markers.push(marker);
    }

    var map = L.map('{{ map_id }}');

    // fit to bounds, so pc and mobile have same content
    // https://leafletjs.com/reference-1.3.2.html#latlngbounds

    // function to change the map focus after click on menu item
    var changeMapArea = function (selected_area_key) {
        {% for area in areas %}
        if (selected_area_key == '{{ area.key }}') {
            var topLeftBound = L.latLng({{ area.top_left.latitude }}, {{ area.top_left.longitude }});
            var bottomRightBound = L.latLng({{ area.bottom_right.latitude }}, {{ area.bottom_right.longitude }});
            var bounds = L.latLngBounds(topLeftBound, bottomRightBound);
        }

        {% endfor %}

        map.fitBounds(bounds);
    };

    // set location to active area
    changeMapArea(window.localStorage.getItem('active_area'));

    // required and nice to have promotion
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    for (var i in grouped) {
        var group = grouped[i];

        var description = '';
        for (var j in group.markers) {
            var marker = group.markers[j];

            var link = marker.title+' (finished)';
            if (! marker.finished) {
                link = '<a class="text-bold block" href="'+marker.link+'" target="_blank" rel="noreferrer noopener">'+marker.title+'</a>';
            }

            description +=
                '<p class="m-b-5" style="font-size: 14px">' + link + '</p>' +
                '<p class="text-small m-b-5 m-t-0">' + marker.location + '</p>' +
                '<p class="text-small m-b-15 m-t-0">' + marker.date + '</p>'
            ;
        }

        var icon = new L.Icon({
            iconUrl: icons[group.type],
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });

        L.marker(group.position, { icon: icon }).bindPopup(description).addTo(map);
    }
</script>
