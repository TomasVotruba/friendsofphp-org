<script src="https://unpkg.com/leaflet@1.3.2/dist/leaflet.js"
        integrity="sha512-2fA79E27MOeBgLjmBrtAgM/20clVSV8vJERaW/EcnnWCVGwQRazzKtQS1kIusCZv1PtaQxosDZZ0F1Oastl55w=="
        crossorigin=""></script>

<script type="text/javascript">
    var icons = {
        // pick from: https://github.com/pointhi/leaflet-color-markers
        green: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png',
        orange: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-orange.png',
        red: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png'
    };

    var markers = [
        {% set markers %}
            {% for meetup in meetups %}
                {# @var meetup \Fop\Meetup\ValueObject\Meetup #}
                {% if meetup.startInDays >= 0 %}
                    {
                        "type": "{% if meetup.startInDays < 7 %}green{% elseif meetup.startInDays < 14 %}orange{% else %}red{% endif %}",
                        "title": "{{ meetup.name }}",
                        "position": [{{ meetup.latitude }}, {{ meetup.longitude }}],
                        "date": "{{ meetup.utcStartDateTime|date("m-d") }}",
                        "location": "{{ meetup.city }}",
                        "url": "{{ meetup.url }}",
                    },
                {% endif %}
            {% endfor %}
        {% endset %}

        {{ markers|trim|trim(',', 'right')|raw }}
    ];

    var grouped = {};

    var tresholdDate = new Date();
    // go 2 hours in the future, so the running meetup is discoverable; e.g. when comming late like me :)
    tresholdDate.setHours(tresholdDate.getHours() - 2);
    var tresholdDateTime = Date.parse(tresholdDate);

    for (var i in markers) {
        var marker = markers[i];

        // is in the past?
        var meetupDateTime = Date.parse(marker.datetime);
        if (meetupDateTime < tresholdDateTime) {
            continue;
        }

        // group meetups in one location
        if (typeof grouped[marker.location] == 'undefined') {
            grouped[marker.location] = {
                type: marker.type,
                position: marker.position,
                markers: []
            };
        }

        grouped[marker.location].markers.push(marker);
    }

    var map = L.map('{{ map_id }}');

    // fit to bounds, so pc and mobile have same content
    // https://leafletjs.com/reference-1.3.2.html#latlngbounds

    // reconstruction from serialized object is not completely working, so we need to restore it manually
    var restoreBoundFromString = function(stringBound) {
        stringBound = stringBound.replace(/%22/g, '"');
        pastBounds = JSON.parse(stringBound);

        return L.latLngBounds(
            L.latLng(pastBounds._northEast.lat, pastBounds._northEast.lng),
            L.latLng(pastBounds._southWest.lat, pastBounds._southWest.lng)
        );
    };

    // get url bounds
    var pastBounds = window.localStorage.getItem('bounds');

    // @see https://stackoverflow.com/a/36444134/1348344
    var isRefreshed = performance.navigation.type;

    if (get('bounds') && isRefreshed === 0)  {
        var boundsAsString = get('bounds');

        map.fitBounds(restoreBoundFromString(boundsAsString));
    } else if (pastBounds) {
        map.fitBounds(restoreBoundFromString(pastBounds));
    } else {
        // default map - the whole world
        map.setView([25, 0], 2);
    }

    // ref https://github.com/php-ug/php.ug/issues/221#issuecomment-437917289
    var restoreDislocation = function(map) {
        var currentCenter = map.getCenter();
        if (currentCenter.lng > 300 || currentCenter.lng < -300) {
            // default map - the whole world
            alert('Whoa, you fell of the main map! Lets get back to center.');
            map.setView([25, 0], 2);
        }
    };

    restoreDislocation(map);


    // store past location when map mooves
    map.on('moveend', function(e) {
        var bounds = map.getBounds();
        // objects needs to serialize, since only string can be saved: https://stackoverflow.com/a/2010948/1348344
        restoreDislocation(map);

        var boundsAsString = boundsToString(bounds);
        window.localStorage.setItem('bounds', boundsAsString);
    });

    // required and nice to have promotion to great tool
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // @see https://stackoverflow.com/a/1199420/1348344
    String.prototype.truncate = String.prototype.truncate ||
        function(n){
            return (this.length > n) ? this.substr(0, n-1) + '&hellip;' : this;
        };

    for (var i in grouped) {
        var group = grouped[i];

        let [first] = group.markers;
        var description = '<div class="text-center mb-3" style="width:450px">üìç&nbsp;&nbsp;'
            + first.location
            + "</div>";

        for (var j in group.markers) {
            marker = group.markers[j];

            var url = '<a class="text-bold block text-primary ml-3" href="' + marker.url + '" target="_blank" rel="noreferrer noopener"><strong>' + marker.title.truncate(38) + '</strong></a>';

            description += '<div class="mb-3">'
                + 'üìÖ&nbsp; ' + marker.date
                + url + '</div>'
            ;
        }

        var icon = new L.Icon({
            iconUrl: icons[group.type],
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34]
        });

        // width: @see https://stackoverflow.com/a/38007764/1348344
        L.marker(group.position, { icon: icon }).addTo(map).bindPopup(description, {
            maxWidth: 450
        });
    }
</script>
